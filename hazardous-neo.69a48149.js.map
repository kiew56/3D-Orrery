{"mappings":"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","sources":["<anon>","NEO.js"],"sourcesContent":["/*\nName: Phillip Proulx\nCourse: CS290\nDate: 08/23/2017\nTitle: NEO.js\nDescription: A javascript program that leverages the NASA NEO API to dynamically\ngenerate tables containing near earth objects within a certain date range.\n\nReferenced: CS290 lecture material.\n*/ var apiKey = \"9Tn2WuDuvpyUzRGyYKKCt09AJJGpqfNSPBlWLvWz\";\n//Event listener for submit button\ndocument.addEventListener(\"DOMContentLoaded\", submitButtonsReady);\nfunction submitButtonsReady() {\n    document.getElementById(\"dateInput\").addEventListener(\"click\", function(event) {\n        var request = new XMLHttpRequest();\n        var startDate = document.getElementById(\"startDateValue\").value; //Start value from user\n        var endDate = document.getElementById(\"endDateValue\").value; //End value from user\n        //Splits and parses start and end date\n        var startDateArray = startDate.split(\"-\");\n        var startDay = startDateArray[2];\n        var endDateArray = endDate.split(\"-\");\n        var endDay = endDateArray[2];\n        //Holds dynamically generated table start\n        var tableHeader = document.getElementById(\"tableHeader\");\n        //Pulls number inputs to calculate total number of days\n        startNum = Number(startDay);\n        endNum = Number(endDay);\n        //Dynamically removes tables if previously requested\n        var myNode = document.getElementById(\"tableHeader\");\n        while(myNode.firstChild)myNode.removeChild(myNode.firstChild);\n        //Calculates total number of days to request\n        var numDays = endNum - startNum + 1;\n        //AJAX NEO API request\n        request.open(\"GET\", \"https://api.nasa.gov/neo/rest/v1/feed?start_date=\" + startDate + \"&end_date=\" + endDate + \"&api_key=\" + apiKey, true);\n        request.addEventListener(\"load\", function() {\n            if (request.status >= 200 && request.status < 400) {\n                var response = JSON.parse(request.responseText);\n                console.log(response);\n                var neoObj = response.near_earth_objects;\n                var neoObjArray = neoObj[Object.keys(neoObj)];\n                //Cycles through returned information dynamically generating tables\n                for(var count = 0; count < numDays; count++){\n                    //Parses JSON objects\n                    var NEOarray = neoObj[Object.keys(neoObj)[count]];\n                    var NEOclose = NEOarray[Object.keys(NEOarray)[0]];\n                    var NEOCAD = NEOclose.close_approach_data;\n                    var NEOCADdate = NEOCAD[Object.keys(NEOCAD)[0]];\n                    var capString = NEOCADdate.close_approach_date;\n                    //Dynamically generates table and caption elements\n                    var newTable = document.createElement(\"table\");\n                    var tableCap = document.createElement(\"caption\");\n                    //Assigns text header elements\n                    tableCap.textContent = \"Date: \" + capString;\n                    var row1 = document.createElement(\"tr\");\n                    var header1 = document.createElement(\"th\");\n                    header1.textContent = \"Object Name\";\n                    var header2 = document.createElement(\"th\");\n                    header2.textContent = \"Distance from Earth (miles)\";\n                    var header3 = document.createElement(\"th\");\n                    header3.textContent = \"Classified Dangerous\";\n                    var header4 = document.createElement(\"th\");\n                    header4.textContent = \"Relative velocity (km/p)\";\n                    var header5 = document.createElement(\"th\");\n                    header5.textContent = \"Link\";\n                    //Apends generated elements to table object\n                    row1.appendChild(header1);\n                    row1.appendChild(header2);\n                    row1.appendChild(header3);\n                    row1.appendChild(header4);\n                    row1.appendChild(header5);\n                    newTable.appendChild(tableCap);\n                    newTable.appendChild(row1);\n                    //Dynamically generates table cells and fills them with NEO returned info\n                    for(var index = 0; index < NEOarray.length; index++){\n                        //Creates celle elements\n                        var row2 = document.createElement(\"tr\");\n                        var data1 = document.createElement(\"td\");\n                        data1.setAttribute(\"id\", \"cell1\");\n                        //Assigns cells returned information\n                        data1.textContent = NEOarray[index].name;\n                        var data2 = document.createElement(\"td\");\n                        data2.textContent = NEOarray[index].close_approach_data[0].miss_distance.miles;\n                        var data3 = document.createElement(\"td\");\n                        data3.textContent = NEOarray[index].is_potentially_hazardous_asteroid;\n                        var data4 = document.createElement(\"td\");\n                        data4.textContent = NEOarray[index].close_approach_data[0].relative_velocity.kilometers_per_hour;\n                        var data5 = document.createElement(\"td\");\n                        //Creates link cells\n                        var NEOlink = document.createElement(\"a\");\n                        var linkText = document.createTextNode(\"Additional Info\");\n                        NEOlink.appendChild(linkText);\n                        NEOlink.title = \"Additional Info\";\n                        NEOlink.href = NEOarray[index].nasa_jpl_url;\n                        NEOlink.target = \"_blank\";\n                        data5.appendChild(NEOlink);\n                        //Appends created cells to generated table\n                        row2.appendChild(data1);\n                        row2.appendChild(data2);\n                        row2.appendChild(data3);\n                        row2.appendChild(data4);\n                        row2.appendChild(data5);\n                        newTable.appendChild(row2);\n                    }\n                    //Apends tables to site\n                    tableHeader.appendChild(newTable);\n                }\n                var allCells = document.body.getElementsByTagName(\"td\");\n                var allHeaders = document.body.getElementsByTagName(\"th\");\n                //Sets table style elements\n                for(var index1 = 0; index1 < allCells.length; index1++)allCells[index1].style.border = \"1px solid white\";\n                for(var index2 = 0; index2 < allHeaders.length; index2++)allHeaders[index2].setAttribute(\"style\", \"border: 2px solid white;\");\n            } else console.log(\"Error in network request: \" + request.statusText);\n        });\n        request.send(null);\n        event.preventDefault();\n    });\n}\n\n//# sourceMappingURL=hazardous-neo.69a48149.js.map\n","/*\nName: Phillip Proulx\nCourse: CS290\nDate: 08/23/2017\nTitle: NEO.js\nDescription: A javascript program that leverages the NASA NEO API to dynamically\ngenerate tables containing near earth objects within a certain date range.\n\nReferenced: CS290 lecture material.\n*/\n\nvar apiKey = '9Tn2WuDuvpyUzRGyYKKCt09AJJGpqfNSPBlWLvWz'; \n      \n      //Event listener for submit button\n      document.addEventListener('DOMContentLoaded', submitButtonsReady);\n\n      function submitButtonsReady(){\n        document.getElementById('dateInput').addEventListener('click', function(event){\n          var request = new XMLHttpRequest();\n          var startDate = document.getElementById('startDateValue').value;    //Start value from user\n          var endDate = document.getElementById('endDateValue').value;        //End value from user\n\n          //Splits and parses start and end date\n          var startDateArray = startDate.split(\"-\");\n          var startDay = startDateArray[2];\n          var endDateArray = endDate.split(\"-\");\n          var endDay = endDateArray[2];\n\n          //Holds dynamically generated table start\n          var tableHeader = document.getElementById(\"tableHeader\");\n\n          //Pulls number inputs to calculate total number of days\n          startNum = Number(startDay);\n          endNum = Number(endDay);\n\n          //Dynamically removes tables if previously requested\n            var myNode = document.getElementById(\"tableHeader\");\n            while (myNode.firstChild) \n            {\n              myNode.removeChild(myNode.firstChild);\n            }\n\n          //Calculates total number of days to request\n          var numDays = (endNum - startNum) + 1;\n\n          //AJAX NEO API request\n          request.open('GET', 'https://api.nasa.gov/neo/rest/v1/feed?start_date=' + startDate +'&end_date='+ endDate +'&api_key=' + apiKey, true);\n          request.addEventListener('load',function(){\n            if(request.status >= 200 && request.status < 400){\n              var response = JSON.parse(request.responseText);\n              console.log(response);\n              var neoObj = response.near_earth_objects;\n              var neoObjArray = neoObj[Object.keys(neoObj)];\n              \n              //Cycles through returned information dynamically generating tables\n              for(var count = 0; count < numDays; count++)\n              {\n\n                //Parses JSON objects\n                var NEOarray = neoObj[Object.keys(neoObj)[count]];\n                var NEOclose = NEOarray[Object.keys(NEOarray)[0]];\n                var NEOCAD = NEOclose.close_approach_data;\n                var NEOCADdate = NEOCAD[Object.keys(NEOCAD)[0]];\n                var capString = NEOCADdate.close_approach_date;\n\n                //Dynamically generates table and caption elements\n                var newTable = document.createElement(\"table\");\n                var tableCap = document.createElement(\"caption\");\n\n                //Assigns text header elements\n                tableCap.textContent = \"Date: \" + capString;\n                var row1 = document.createElement(\"tr\");\n                var header1 = document.createElement(\"th\");\n                header1.textContent = \"Object Name\";\n                var header2 = document.createElement(\"th\");\n                header2.textContent = \"Distance from Earth (miles)\";\n                var header3 = document.createElement(\"th\");\n                header3.textContent = \"Classified Dangerous\";\n                var header4 = document.createElement('th');\n                header4.textContent = \"Relative velocity (km/p)\";\n                var header5 = document.createElement(\"th\");\n                header5.textContent = \"Link\";\n\n\n                //Apends generated elements to table object\n                row1.appendChild(header1);\n                row1.appendChild(header2);\n                row1.appendChild(header3);\n                row1.appendChild(header4);\n                row1.appendChild(header5);\n                newTable.appendChild(tableCap);\n                newTable.appendChild(row1);\n\n                //Dynamically generates table cells and fills them with NEO returned info\n                for(var index = 0; index < NEOarray.length; index++)\n                {\n                  //Creates celle elements\n                  var row2 = document.createElement(\"tr\");\n                  var data1 = document.createElement(\"td\");\n                  data1.setAttribute(\"id\", \"cell1\");\n\n                  //Assigns cells returned information\n                  data1.textContent = NEOarray[index].name;\n                  var data2 = document.createElement(\"td\");\n                  data2.textContent = NEOarray[index].close_approach_data[0].miss_distance.miles;\n                  var data3 = document.createElement(\"td\");\n                  data3.textContent = NEOarray[index].is_potentially_hazardous_asteroid;\n                  var data4 = document.createElement(\"td\");\n                  data4.textContent = NEOarray[index].close_approach_data[0].relative_velocity.kilometers_per_hour;\n                  var data5 = document.createElement(\"td\");\n\n                  //Creates link cells\n                  var NEOlink = document.createElement(\"a\");\n                  var linkText = document.createTextNode(\"Additional Info\");\n                  NEOlink.appendChild(linkText);\n                  NEOlink.title = \"Additional Info\";\n                  NEOlink.href = NEOarray[index].nasa_jpl_url;\n                  NEOlink.target = \"_blank\";\n                  data5.appendChild(NEOlink);\n\n                  //Appends created cells to generated table\n                  row2.appendChild(data1);\n                  row2.appendChild(data2);\n                  row2.appendChild(data3);\n                  row2.appendChild(data4);\n                  row2.appendChild(data5);\n                  newTable.appendChild(row2);\n\n                }\n\n              //Apends tables to site\n              tableHeader.appendChild(newTable);\n\n              }\n\n              var allCells = document.body.getElementsByTagName(\"td\");\n              var allHeaders = document.body.getElementsByTagName(\"th\");\n\n              //Sets table style elements\n              for(var index1 = 0; index1 < allCells.length; index1++)\n              {\n                allCells[index1].style.border = \"1px solid white\";\n              }\n              for(var index2 = 0; index2 < allHeaders.length; index2++)\n              {\n                  allHeaders[index2].setAttribute(\"style\", \"border: 2px solid white;\");\n              }\n\n            } \n            else \n            { \n\n                  console.log(\"Error in network request: \" + request.statusText);\n\n            }});\n\n          request.send(null);\n          event.preventDefault();\n        })\n\n      }\n\n     "],"names":["document","addEventListener","getElementById","event","request","XMLHttpRequest","startDate","value","endDate","startDay","startDateArray","split","endDay","endDateArray","tableHeader","startNum","Number","endNum","myNode","firstChild","removeChild","numDays","open","status","response","JSON","parse","responseText","console","log","neoObj","near_earth_objects","Object","keys","count","NEOarray","NEOCAD","NEOclose","close_approach_data","capString","NEOCADdate","close_approach_date","newTable","createElement","tableCap","textContent","row1","header1","header2","header3","header4","header5","appendChild","index","length","row2","data1","setAttribute","name","data2","miss_distance","miles","data3","is_potentially_hazardous_asteroid","data4","relative_velocity","kilometers_per_hour","data5","NEOlink","linkText","createTextNode","title","href","nasa_jpl_url","target","allCells","body","getElementsByTagName","allHeaders","index1","style","border","index2","statusText","send","preventDefault"],"version":3,"file":"hazardous-neo.69a48149.js.map"}